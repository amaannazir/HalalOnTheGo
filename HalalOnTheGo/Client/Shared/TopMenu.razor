@inject ISyncLocalStorageService LocalStorage
@inject ICartService CartService
@implements IDisposable

<a href="cart" class="btn btn-info">
  <i class="oi oi-cart"></i>
   Cart
  <span class="badge badge-pill badge-light">@GetProductCount()</span>
</a>


@code 
{
    //Overrides the OnInitialized method.
    protected override void OnInitialized()
    {
        CartService.OnChange += StateHasChanged; //Subscribe the StateHasChanged method to the OnChange event of the CartService. This ensures that when the cart is updated, the component will re-render.
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged; //DISPOSES OF / THE OPPOSITe of the above code
    }

    private int GetProductCount()
    {
        var cart = LocalStorage.GetItem<List<ProductVariant>>("cart");
        return cart != null ? cart.Count : 0; //SIMPLIFIED IF STATEMENT
    }

}
 

