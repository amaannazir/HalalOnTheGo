@page "/login"
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<br />
<br />
<br />
<br />
<br />

<h3 class="home-title">Login</h3>
<br />
<p class="text"><b><i>Please login with your student email address and password you registered with your sheffield university (This usually follows the "@@university.ac.uk" convenction)</i></b></p>

<EditForm Model="user" OnSubmit="HandleLogin">
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
        <button class="loginbtn" type ="submit"><b>Login</b></button>
    </div>

    
</EditForm>

@code {
    private User user = new User(); //Model initialized for EditForm! 

    private async void HandleLogin()
    {
        await LocalStorage.SetItemAsync<string>("email", user.Email);
        await AuthStateProvider.GetAuthenticationStateAsync(); //This method will ghet the current user authentication state, authorized or NOT authorized. 
        NavigationManager.NavigateTo("");
    }
}
